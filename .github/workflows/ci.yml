name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          pkg-config \
          libpulse-dev \
          libjack-jackd2-dev \
          libpipewire-0.3-dev \
          libspa-0.2-dev

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Clippy linting
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      run: cargo test --verbose --all-features
      env:
        # Disable audio tests in CI environment
        RUST_TEST_THREADS: 1

    - name: Build release
      run: cargo build --release --verbose

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          pkg-config \
          libpulse-dev \
          libjack-jackd2-dev \
          libpipewire-0.3-dev \
          libspa-0.2-dev

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml
      env:
        RUST_TEST_THREADS: 1

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./cobertura.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  build_matrix:
    name: Build Matrix
    strategy:
      matrix:
        rust: [stable, beta]
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2-dev \
          pkg-config \
          libpulse-dev \
          libjack-jackd2-dev \
          libpipewire-0.3-dev \
          libspa-0.2-dev

    - name: Check compilation
      run: cargo check --all-targets --all-features

    - name: Run tests
      run: cargo test --verbose --all-features
      env:
        RUST_TEST_THREADS: 1

    - name: Build release
      run: cargo build --release --verbose